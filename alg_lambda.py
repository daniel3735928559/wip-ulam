from sage.libs.fplll.fplll import FP_LLL

lambdas = {
"1,2":2.4434427250699096,
"1,3":2.2174664768977426,
"1,4":12.417038747006254,
"1,5":15.417058504960167,
"1,6":18.417073925559762,
"1,7":21.41706814202711,
"1,8":24.417040571725813,
"1,9":27.417146437771752,
"1,10":30.41712211110694,
"1,11":6.683415162692536,
"1,12":18.208523431588784,
"1,13":19.708481975607533,
"1,14":21.20845259952416,
"1,15":22.70853824241943,
"2,3":5.393235598097941,
"3,4":2.844306703050331,
"3,5":3.13399485843738,
"3,7":2.9016732945413732,
"3,8":3.08934679122933,
"3,10":2.9309436043679087,
"5,7":1.960750369943171,
"5,8":5.113314806364161,
"5,9":2.5288683997372066,
"10010":3.2123750958101556,
"01001":2.5046387448555136,
"01010":3.4871112310078973}

def find_mp(x,deg=50,n=10^10):
    M = []
    for i in range(deg+1):
        M.append([1 if v == i else 0 for v in range(deg+1)]+[int(n*(x^i)+.5)])
    M = matrix(M)
    F=FP_LLL(M)
    F.LLL()
    l=F._sage_()[0][:-1]

    R = ZZ['X']
    X=R.gen()
    fx = 0
    for i in range(len(l)):
        fx += X^i * l[i]
    ans = N(fx(x),50)
    return(ans, fx, fx.factor(), deg)

for s in lambdas:
    b = lambdas[s]
    print(s)
    ms = [find_mp(b,i) for i in range(2,10)]
    ms.sort(key=lambda x:abs(x[0]))
    for x in ms:
        print(x[0],x[1],x[3])
